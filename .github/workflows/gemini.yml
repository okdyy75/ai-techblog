
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

permissions:
  issues: write
  contents: write
  pull-requests: write

jobs:
  gemini:
    timeout-minutes: 20
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.issue.number }}
      cancel-in-progress: true
    runs-on: ubuntu-latest

    # コメントがgeminiで始まる場合のみ実行
    if: startsWith(github.event.comment.body, 'gemini')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set context
        id: context
        run: |
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
              echo "type=Issue" >> $GITHUB_OUTPUT
              echo "comment=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
              echo "number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
              echo "title=${{ github.event.issue.title }}" >> $GITHUB_OUTPUT
              echo "body=${{ github.event.issue.body }}" >> $GITHUB_OUTPUT 
            else
              echo "type=Pull Request" >> $GITHUB_OUTPUT
              echo "comment=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
              echo "number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
              echo "title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
              echo "body=${{ github.event.pull_request.body }}" >> $GITHUB_OUTPUT
            fi
        
          
      - name: Run Gemini CLI from the main branch
        uses: google-gemini/gemini-cli-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: latest
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            ${{ steps.context.outputs.comment }}

            ### 前提
            - 確認は不要です
            - 常に日本語で返答してください
            - エラーが発生した場合は、常にエラー内容を出力してください

            ### ${{ steps.context.outputs.type }}情報
            - Repository: ${{ github.repository }}
            - ${{ steps.context.outputs.type }} 番号: ${{ steps.context.outputs.number }}
            - ${{ steps.context.outputs.type }} タイトル: ${{ steps.context.outputs.title }}
            - ${{ steps.context.outputs.type }} 本文: ${{ steps.context.outputs.body }}

      - name: Commit Changes
        id: commit
        run: |
          git branch
          git status
